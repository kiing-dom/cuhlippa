name: Build Native Installers

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual trigger
    inputs:
      version:
        description: 'Version to build'
        required: true
        default: '1.0.0'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Build all modules
        run: mvn clean compile package -DskipTests
      
      - name: Build Windows Installer
        run: |
          cd packaging
          mvn clean package -P windows -DskipTests
      
      - name: Upload Windows Installer
        uses: actions/upload-artifact@v3
        with:
          name: cuhlippa-windows-installer
          path: packaging/target/installer/*.msi
      
      - name: Upload to Release (if release event)
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: packaging/target/installer/Cuhlippa-1.0.0.msi
          asset_name: Cuhlippa-Windows-1.0.0.msi
          asset_content_type: application/x-msi

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Build all modules
        run: mvn clean compile package -DskipTests
      
      - name: Build macOS Installer
        run: |
          cd packaging
          mvn clean package -P macos -DskipTests
      
      - name: Upload macOS Installer
        uses: actions/upload-artifact@v3
        with:
          name: cuhlippa-macos-installer
          path: packaging/target/installer/*.dmg
      
      - name: Upload to Release (if release event)
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: packaging/target/installer/Cuhlippa-1.0.0.dmg
          asset_name: Cuhlippa-macOS-1.0.0.dmg
          asset_content_type: application/x-apple-diskimage

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Build all modules
        run: mvn clean compile package -DskipTests
      
      - name: Build Linux Installer
        run: |
          cd packaging
          mvn clean package -P linux -DskipTests
      
      - name: Upload Linux Installer
        uses: actions/upload-artifact@v3
        with:
          name: cuhlippa-linux-installer
          path: packaging/target/installer/*.deb
      
      - name: Upload to Release (if release event)
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: packaging/target/installer/cuhlippa_1.0.0_amd64.deb
          asset_name: cuhlippa-Linux-1.0.0.deb
          asset_content_type: application/vnd.debian.binary-package
